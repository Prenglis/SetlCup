math_expression_grammar-pure.g:

1. Kommentar: Die Grammatik beschreibt arithmetische Ausdrücke.

2. Warum steht da noch "DIVIDE" und nicht '/'?

3. Warum wird "\n" nicht als Wihte-Space behandelt?

Aufruf des Programms:

1. Der Aufruf "setlx setlcup.stlx  -h" liefert:

Error in "main()":
Error in "closure() { assert(#params > 0, "Params need to be specified. Try -p -help to get help about params"); if ("-h" in params) { print("setlx setlcup.stlx -p <input_grammar> <-d>"); } else { input_grammar := params[1]; silent_mode := true; if (#params == 2) { if ("-d" in params) { silent_mode := false; } } generate_parser(input_grammar, silent_mode); } }()":
Assertion failed: "Params need to be specified. Try -p -help to get help about params"

2. Der Aufruf  "setlx setlcup.stlx  -p -help" liefert:

Error in "main()":
Error in "closure() { assert(#params > 0, "Params need to be specified. Try -p -help to get help about params"); if ("-h" in params) { print("setlx setlcup.stlx -p <input_grammar> <-d>"); } else { input_grammar := params[1]; silent_mode := true; if (#params == 2) { if ("-d" in params) { silent_mode := false; } } generate_parser(input_grammar, silent_mode); } }()":
Error in "generate_parser(input_grammar, silent_mode)":
Error in "procedure(input_grammar, silent_mode) { silent_mode := silent_mode; [_, output_file_name] := matches(input_grammar, '[\\/]?(?:[^\\/]+[\\/])*([a-zA-Z_0-9][a-zA-Z_0-9]*)(?:\..*)?', true); output_file_name += "Grammar.stlx"; parser_token_list := generate_parser_token_list(input_grammar, output_file_name, silent_mode); if (!silent_mode) { print("parser_token_list : $parser_token_list$"); } write_parser_file(parser_token_list, output_file_name, silent_mode); }(input_grammar, silent_mode)":
Error in "[_, output_file_name] := matches(input_grammar, '[\\/]?(?:[^\\/]+[\\/])*([a-zA-Z_0-9][a-zA-Z_0-9]*)(?:\..*)?', true)":
Members of '[]' are unusable for list assignment.

3. Wenn man das Programm in der Form

   setlx setlcup.stlx  -p examples/math_expression_grammar-pure.g

aufruft, dann sollte die Ergebnis-Datei sinnvollerweise auch in dem Verzeichnis "examples" erstellt werden.

4. Wie wird das erzeugte Programm aufgerufen?

test_setlcup.stlx

1. Zeilen sollten nicht länger als 90 Zeichen sein.

Allgemein:

1. Die Fehlerbehandlung ist noch unzureichend:  Shift-Reduce- und Reduce-Reduce-Konflikte müssen angezeigt werden.

2. Es wäre gut, wenn Sie auch den erzeugten Code einrücken könnten.

3. Wie aktiviere ich den "silent mode"?
