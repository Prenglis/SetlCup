load("scanner_generator.stlx");
generate_ast := procedure(input_grammar, file_to_parse, silent_mode)
{
	silent_mode := silent_mode;
	load("grammar_parser.stlx");
	try
	{
		[scan_output, parser_token_list] := test_scanner_generator_scan(input_grammar, file_to_parse, silent_mode);
	}
	catch(e){
		print("Error while generating Scanner: $e$");
	}

	if(!silent_mode)
	{
			print("scan_output :$scan_output$");
			print(parser_token_list);	
	}
	try
	{
		tfs_list := [ruleNames, rulesMap, stateTable, actionTable, gotoTable] := testFromTokenList(parser_token_list, silent_mode);
	}
	catch(e)
	{
		print("error while generating parser : $e$");
	}
	load("lr_shift_reduce_parser.stlx");
	try
	{
		ast := myParse(ruleNames, rulesMap, stateTable, actionTable, gotoTable, silent_mode);
	}
	catch(e)
	{
		print("error while parsing : $e$");
	}
	if(!silent_mode)
	{
		print("ast := $ast$;");
	}
	return ast;

	

};
call_generate_ast := procedure(input_grammar, file_to_parse, silent_mode)
{
	// print("silent_mode:$silent_mode$");
	ast := generate_ast(input_grammar, file_to_parse, silent_mode);
	if(silent_mode)
	{
		deleteFile("temp_action_code.stlx");
	}
	return ast;
};

