n := '1';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
 result := p;     
e := result;
n := '2';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
n := '3';
 result := Integer(eval(n)); 
f := result;
 result := Times(p , f); 
p := result;
 result := Plus(e , p); 
e := result;
n := '4';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
 result := Minus(e , p); 
e := result;
 result := e; 
part := result;
n := '1';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
 result := p;     
e := result;
n := '2';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
 result := Plus(e , p); 
e := result;
n := '3';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
 result := Plus(e , p); 
e := result;
n := '4';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
 result := Plus(e , p); 
e := result;
 result := e; 
part := result;
n := '1';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
 result := p;     
e := result;
n := '2';
 result := Integer(eval(n)); 
f := result;
 result := f;     
p := result;
n := '3';
 result := Integer(eval(n)); 
f := result;
 result := Times(p , f); 
p := result;
 result := p;     
e_part := result;
 result :=  e_part ;   
f := result;
 result := f;     
p := result;
n := '5';
 result := Integer(eval(n)); 
f := result;
 result := Times(p , f); 
p := result;
n := '6';
 result := Integer(eval(n)); 
f := result;
 result := Mod(p , f); 
p := result;
 result := Plus(e , p); 
e := result;
 result := e; 
part := result;
 result := []; 
l := result;
 result := [part] + l; 
l := result;
 result := [part] + l; 
l := result;
 result := [part] + l; 
esl := result;
 result := ExprList(esl); 
