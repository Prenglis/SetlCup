a := [];
b := [];
be_par := [];
c := [];
d := [];
dl := [];
dsl := [];
e := [];
e_a := [];
e_par := [];
el := [];
f := [];
function_name := [];
i_a := [];
id := [];
id_1 := [];
id_2 := [];
lhs := [];
n := [];
nid := [];
np := [];
p := [];
param_list := [];
printexpr_list := [];
rhs := [];
s := [];
sl := [];
st_list1 := [];
st_list2 := [];
st_list3 := [];
statement_list := [];
stmts := [];
string := [];
id += ['s'];
n += ['0'];
t_n := n;
n := n[-1];
 result := Integer(eval(n));   
n := t_n[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_p := p;
p := p[-1];
 result := p;     
p := t_p[..-2];
e += [result];
t_e := e;
e := e[-1];
t_id := id;
id := id[-1];
 result := Assign(id, e); 
e := t_e[..-2];
id := t_id[..-2];
a += [result];
t_a := a;
a := a[-1];
 result := Ass(a); 
a := t_a[..-2];
stmts += [result];
id += ['i'];
n += ['0'];
t_n := n;
n := n[-1];
 result := Integer(eval(n));   
n := t_n[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_p := p;
p := p[-1];
 result := p;     
p := t_p[..-2];
e += [result];
t_e := e;
e := e[-1];
t_id := id;
id := id[-1];
 result := Assign(id, e); 
e := t_e[..-2];
id := t_id[..-2];
a += [result];
t_a := a;
a := a[-1];
 result := Ass(a); 
a := t_a[..-2];
stmts += [result];
id_2 += ['i'];
t_id_2 := id_2;
id_2 := id_2[-1];
 result := Variable(id_2); 
id_2 := t_id_2[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_p := p;
p := p[-1];
 result := p;     
p := t_p[..-2];
lhs += [result];
n += ['36'];
t_n := n;
n := n[-1];
 result := Integer(eval(n));   
n := t_n[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_p := p;
p := p[-1];
 result := p;     
p := t_p[..-2];
rhs += [result];
t_lhs := lhs;
lhs := lhs[-1];
t_rhs := rhs;
rhs := rhs[-1];
 result := LessOrEqual(lhs,rhs); 
lhs := t_lhs[..-2];
rhs := t_rhs[..-2];
e += [result];
t_e := e;
e := e[-1];
 result := Negation(e); 
e := t_e[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f; 
f := t_f[..-2];
c += [result];
t_c := c;
c := c[-1];
 result := c; 
c := t_c[..-2];
d += [result];
t_d := d;
d := d[-1];
 result := d; 
d := t_d[..-2];
e += [result];
t_e := e;
e := e[-1];
 result := Negation(e); 
e := t_e[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f; 
f := t_f[..-2];
c += [result];
t_c := c;
c := c[-1];
 result := c; 
c := t_c[..-2];
d += [result];
t_d := d;
d := d[-1];
 result := d; 
d := t_d[..-2];
b += [result];
id += ['i'];
id_2 += ['i'];
t_id_2 := id_2;
id_2 := id_2[-1];
 result := Variable(id_2); 
id_2 := t_id_2[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_p := p;
p := p[-1];
 result := p;     
p := t_p[..-2];
e += [result];
n += ['1'];
t_n := n;
n := n[-1];
 result := Integer(eval(n));   
n := t_n[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_e := e;
e := e[-1];
t_p := p;
p := p[-1];
 result := Sum(e,p); 
e := t_e[..-2];
p := t_p[..-2];
e += [result];
t_e := e;
e := e[-1];
t_id := id;
id := id[-1];
 result := Assign(id, e); 
e := t_e[..-2];
id := t_id[..-2];
a += [result];
t_a := a;
a := a[-1];
 result := Ass(a); 
a := t_a[..-2];
s += [result];
id += ['s'];
id_2 += ['s'];
t_id_2 := id_2;
id_2 := id_2[-1];
 result := Variable(id_2); 
id_2 := t_id_2[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_p := p;
p := p[-1];
 result := p;     
p := t_p[..-2];
e += [result];
id_2 += ['i'];
t_id_2 := id_2;
id_2 := id_2[-1];
 result := Variable(id_2); 
id_2 := t_id_2[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_e := e;
e := e[-1];
t_p := p;
p := p[-1];
 result := Sum(e,p); 
e := t_e[..-2];
p := t_p[..-2];
e += [result];
t_e := e;
e := e[-1];
t_id := id;
id := id[-1];
 result := Assign(id, e); 
e := t_e[..-2];
id := t_id[..-2];
a += [result];
t_a := a;
a := a[-1];
 result := Ass(a); 
a := t_a[..-2];
s += [result];
 result := []; 
sl += [result];
t_s := s;
s := s[-1];
t_sl := sl;
sl := sl[-1];
 result := [s] + sl ; 
s := t_s[..-2];
sl := t_sl[..-2];
sl += [result];
t_s := s;
s := s[-1];
t_sl := sl;
sl := sl[-1];
 result := [s] + sl ; 
s := t_s[..-2];
sl := t_sl[..-2];
st_list2 += [result];
t_b := b;
b := b[-1];
t_st_list2 := st_list2;
st_list2 := st_list2[-1];
 result := While(b, st_list2); 
b := t_b[..-2];
st_list2 := t_st_list2[..-2];
stmts += [result];
id_2 += ['quit'];
t_id_2 := id_2;
id_2 := id_2[-1];
 result := Variable(id_2); 
id_2 := t_id_2[..-2];
f += [result];
t_f := f;
f := f[-1];
 result := f;     
f := t_f[..-2];
p += [result];
t_p := p;
p := p[-1];
 result := p;     
p := t_p[..-2];
e += [result];
t_e := e;
e := e[-1];
 result := Expr(e); 
e := t_e[..-2];
stmts += [result];
 result := []; 
dsl += [result];
t_dsl := dsl;
dsl := dsl[-1];
t_stmts := stmts;
stmts := stmts[-1];
 result := [stmts] + dsl; 
dsl := t_dsl[..-2];
stmts := t_stmts[..-2];
dsl += [result];
t_dsl := dsl;
dsl := dsl[-1];
t_stmts := stmts;
stmts := stmts[-1];
 result := [stmts] + dsl; 
dsl := t_dsl[..-2];
stmts := t_stmts[..-2];
dsl += [result];
t_dsl := dsl;
dsl := dsl[-1];
t_stmts := stmts;
stmts := stmts[-1];
 result := [stmts] + dsl; 
dsl := t_dsl[..-2];
stmts := t_stmts[..-2];
dsl += [result];
t_dsl := dsl;
dsl := dsl[-1];
t_stmts := stmts;
stmts := stmts[-1];
 result := [stmts] + dsl; 
dsl := t_dsl[..-2];
stmts := t_stmts[..-2];
d += [result];
t_d := d;
d := d[-1];
 result := Program(d); 
d := t_d[..-2];
